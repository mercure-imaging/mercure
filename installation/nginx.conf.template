events {
    worker_connections 1024;
}

http {
    upstream oauth2-proxy {
        server 127.0.0.1:4180;
    }

    upstream mercure-ui {
        server 127.0.0.1:8001;
    }

    # Enable real IP forwarding
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Custom PID file location for systemd
    pid /var/run/nginx-mercure.pid;

    # Error and access logs
    error_log /var/log/nginx/mercure-error.log;
    access_log /var/log/nginx/mercure-access.log;

    server {
        listen 8000;
        server_name _;

        # Handle OAuth2 Proxy routes
        location /oauth2/ {
            proxy_pass       http://oauth2-proxy;
            proxy_set_header Host                    $host;
            proxy_set_header X-Real-IP               $remote_addr;
            proxy_set_header X-Scheme                $scheme;
            proxy_set_header X-Auth-Request-Redirect $request_uri;
            proxy_set_header X-Forwarded-For         $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto       $scheme;
        }

        # Auth endpoint for nginx auth_request
        location = /oauth2/auth {
            proxy_pass       http://oauth2-proxy;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI  $request_uri;
            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # All other routes require authentication
        location / {
            # Check authentication with oauth2-proxy
            auth_request /oauth2/auth;

            # Get user information from oauth2-proxy auth response only
            auth_request_set $user   $upstream_http_x_auth_request_user;
            auth_request_set $email  $upstream_http_x_auth_request_email;
            auth_request_set $groups $upstream_http_x_auth_request_groups;
            auth_request_set $preferred_username $upstream_http_x_auth_request_preferred_username;

            # SECURITY: Clear ALL possible client-provided auth headers to prevent spoofing
            # Clear standard auth headers
            proxy_set_header X-Forwarded-User "";
            proxy_set_header X-Forwarded-Groups "";
            proxy_set_header X-User "";
            proxy_set_header X-Email "";
            proxy_set_header X-Groups "";
            proxy_set_header X-Preferred-Username "";

            # Clear OAuth2-proxy specific headers
            proxy_set_header X-Auth-Request-User "";
            proxy_set_header X-Auth-Request-Email "";
            proxy_set_header X-Auth-Request-Groups "";
            proxy_set_header X-Auth-Request-Preferred-Username "";

            # Clear additional potential spoofing headers
            proxy_set_header Remote-User "";
            proxy_set_header Remote-Groups "";
            proxy_set_header Authorization "";
            proxy_set_header X-Remote-User "";
            proxy_set_header X-Remote-Groups "";

            # SECURITY: Only set headers if user is authenticated (non-empty)
            # This prevents setting empty headers that could bypass validation
            set $safe_user "";
            set $safe_email "";
            set $safe_groups "";
            set $safe_preferred_username "";

            if ($user != "") {
                set $safe_user $user;
            }
            if ($email != "") {
                set $safe_email $email;
            }
            if ($groups != "") {
                set $safe_groups $groups;
            }
            if ($preferred_username != "") {
                set $safe_preferred_username $preferred_username;
            }

            # Set validated headers from oauth2-proxy only when authenticated
            proxy_set_header X-Forwarded-User $safe_user;
            proxy_set_header X-Forwarded-Groups $safe_groups;
            proxy_set_header X-User $safe_user;
            proxy_set_header X-Email $safe_email;
            proxy_set_header X-Groups $safe_groups;
            proxy_set_header X-Preferred-Username $safe_preferred_username;

            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle redirects on authentication failure
            error_page 401 = @error401;

            # Proxy to mercure UI
            proxy_pass http://mercure-ui;
        }

        # Redirect to oauth2-proxy sign in
        location @error401 {
            return 302 /oauth2/sign_in?rd=$request_uri;
        }
    }
}